{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prath\\\\Desktop\\\\react\\\\razorpay-integration\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { verifyOtpAndGetToken, fetchRazorpayKey, createOrder, initiatePayment, verifyOrder } from '../api';\n\n// const Payment = () => {\n//   const [token, setToken] = useState('');\n//   const [razorpayKey, setRazorpayKey] = useState('');\n\n//   useEffect(() => {\n//     const initializePayment = async () => {\n//       const generatedToken = await verifyOtpAndGetToken();\n//       setToken(generatedToken);\n\n//       const key = await fetchRazorpayKey(generatedToken);\n//       setRazorpayKey(key);\n//     };\n\n//     initializePayment();\n//   }, []);\n\n//   const handlePayment = async () => {\n//     const transactionId = await createOrder(token, '6613d6fbbf1afca9aa1b519e', '662caa2d50bf43b5cef75232', 441, 'NEET25');\n//     await initiatePayment(transactionId, razorpayKey, (paymentId, signature) =>\n//       verifyOrder(token, paymentId, signature, transactionId)\n//     );\n//   };\n\n//   return (\n//     <div className=\"payment-container\">\n//       <button onClick={handlePayment}>Pay Now</button>\n//     </div>\n//   );\n// };\n\n// export default Payment;\n\nimport React, { useEffect, useState } from 'react';\nimport { verifyOtpAndGetToken, fetchRazorpayKey, createOrder, initiatePayment, verifyOrder } from '../api';\nimport './Payment.css'; // Optional: for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const RAZORPAY_KEY = 'rzp_test_qUtLOVt2Ge3dFM';\n  useEffect(() => {\n    const initializePayment = async () => {\n      try {\n        // Generate the token\n        const generatedToken = await verifyOtpAndGetToken();\n        setToken(generatedToken);\n\n        // Fetch the Razorpay key\n        const key = await fetchRazorpayKey(generatedToken);\n        setRazorpayKey(key);\n      } catch (error) {\n        console.error('Initialization error:', error);\n      }\n    };\n\n    // Ensure Razorpay script is loaded\n    const checkRazorpayScript = () => {\n      if (!window.Razorpay) {\n        const script = document.createElement('script');\n        script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n        script.onload = () => {\n          initializePayment();\n        };\n        script.onerror = () => {\n          console.error('Failed to load Razorpay script');\n        };\n        document.body.appendChild(script);\n      } else {\n        initializePayment();\n      }\n    };\n    checkRazorpayScript();\n  }, []);\n  const handlePayment = async () => {\n    try {\n      // Create an order\n      const transactionId = await createOrder(token, '6613d6fbbf1afca9aa1b519e', '662caa2d50bf43b5cef75232', 441, 'NEET25');\n      // Initiate payment\n      await initiatePayment(transactionId, razorpayKey, (paymentId, signature) => verifyOrder(token, paymentId, signature, transactionId));\n    } catch (error) {\n      console.error('Payment error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      disabled: !razorpayKey,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"vf+oyXHY90mQMbpq6nUOg8QmBuc=\");\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useEffect","useState","verifyOtpAndGetToken","fetchRazorpayKey","createOrder","initiatePayment","verifyOrder","jsxDEV","_jsxDEV","Payment","_s","token","setToken","RAZORPAY_KEY","initializePayment","generatedToken","key","setRazorpayKey","error","console","checkRazorpayScript","window","Razorpay","script","document","createElement","src","onload","onerror","body","appendChild","handlePayment","transactionId","razorpayKey","paymentId","signature","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prath/Desktop/react/razorpay-integration/src/components/Payment.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { verifyOtpAndGetToken, fetchRazorpayKey, createOrder, initiatePayment, verifyOrder } from '../api';\r\n\r\n// const Payment = () => {\r\n//   const [token, setToken] = useState('');\r\n//   const [razorpayKey, setRazorpayKey] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const initializePayment = async () => {\r\n//       const generatedToken = await verifyOtpAndGetToken();\r\n//       setToken(generatedToken);\r\n\r\n//       const key = await fetchRazorpayKey(generatedToken);\r\n//       setRazorpayKey(key);\r\n//     };\r\n\r\n//     initializePayment();\r\n//   }, []);\r\n\r\n//   const handlePayment = async () => {\r\n//     const transactionId = await createOrder(token, '6613d6fbbf1afca9aa1b519e', '662caa2d50bf43b5cef75232', 441, 'NEET25');\r\n//     await initiatePayment(transactionId, razorpayKey, (paymentId, signature) =>\r\n//       verifyOrder(token, paymentId, signature, transactionId)\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"payment-container\">\r\n//       <button onClick={handlePayment}>Pay Now</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { verifyOtpAndGetToken, fetchRazorpayKey, createOrder, initiatePayment, verifyOrder } from '../api';\r\nimport './Payment.css'; // Optional: for styling\r\n\r\n\r\nconst Payment = () => {\r\n  const [token, setToken] = useState('');\r\n  const RAZORPAY_KEY = 'rzp_test_qUtLOVt2Ge3dFM';\r\n\r\n  useEffect(() => {\r\n    const initializePayment = async () => {\r\n      try {\r\n        // Generate the token\r\n        const generatedToken = await verifyOtpAndGetToken();\r\n        setToken(generatedToken);\r\n\r\n        // Fetch the Razorpay key\r\n        const key = await fetchRazorpayKey(generatedToken);\r\n        setRazorpayKey(key);\r\n      } catch (error) {\r\n        console.error('Initialization error:', error);\r\n      }\r\n    };\r\n\r\n    // Ensure Razorpay script is loaded\r\n    const checkRazorpayScript = () => {\r\n      if (!window.Razorpay) {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n        script.onload = () => {\r\n          initializePayment();\r\n        };\r\n        script.onerror = () => {\r\n          console.error('Failed to load Razorpay script');\r\n        };\r\n        document.body.appendChild(script);\r\n      } else {\r\n        initializePayment();\r\n      }\r\n    };\r\n\r\n    checkRazorpayScript();\r\n  }, []);\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      // Create an order\r\n      const transactionId = await createOrder(token, '6613d6fbbf1afca9aa1b519e', '662caa2d50bf43b5cef75232', 441, 'NEET25');\r\n      // Initiate payment\r\n      await initiatePayment(transactionId, razorpayKey, (paymentId, signature) =>\r\n        verifyOrder(token, paymentId, signature, transactionId)\r\n      );\r\n    } catch (error) {\r\n      console.error('Payment error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <button onClick={handlePayment} disabled={!razorpayKey}>\r\n        Pay Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}